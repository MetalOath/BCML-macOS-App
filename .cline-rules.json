{
  "version": "1.0",
  "project_objective": "Implementation of a self-contained macOS application packaging BCML with all dependencies in an isolated runtime environment to maintain source integrity of the original BCML codebase. The primary focus is on wrapping the BCML project in a macOS launcher, NOT on modifying core BCML functionality.",
  "rules": {
    "code_modification": {
      "scope_restriction": {
        "enabled": true,
        "description": "Code modifications should be strictly limited to the macOS launcher components. Core BCML files should remain unmodified."
      }
    },
    "python": {
      "code_style": {
        "enabled": true,
        "formatter": "black",
        "description": "Python code for the macOS launcher should be formatted with Black as specified in CONTRIBUTING.md. Does not apply to original BCML python files."
      }
    },
    "javascript": {
      "jsx_formatting": {
        "enabled": true,
        "formatter": "prettier",
        "settings": {
          "arrowParens": "avoid",
          "jsxBracketSameLine": true,
          "printWidth": 88,
          "tabWidth": 4,
          "trailingComma": "none"
        },
        "description": "JSX for the macOS launcher should be formatted with Prettier using the specified settings as documented in CONTRIBUTING.md. Does not apply to original BCML javascript files."
      }
    },
    "bash": {
      "error_handling": {
        "enabled": true,
        "require_exit_codes": true,
        "description": "Always handle errors and use appropriate exit codes to ensure robust script execution."
      },
      "shebang": {
        "enabled": true,
        "required": true,
        "value": "#!/bin/bash",
        "description": "All executable shell scripts must start with #!/bin/bash for consistency."
      }
    },
    "security": {
      "path_traversal": {
        "enabled": true,
        "description": "Avoid path traversal vulnerabilities by validating file paths before use."
      },
      "input_validation": {
        "enabled": true,
        "description": "Validate all user inputs to prevent unexpected behavior or security issues."
      },
      "environment_variables": {
        "enabled": true,
        "required_quote": true,
        "description": "Always quote environment variable expansions to prevent word splitting and globbing."
      }
    },
    "best_practices": {
      "file_permissions": {
        "enabled": true,
        "executable_mask": "755",
        "non_executable_mask": "644",
        "description": "Set appropriate file permissions: 755 for executables and 644 for non-executables."
      }
    },
    "git": {
      "no_binary_files": {
        "enabled": true,
        "exceptions": ["assets/AppIcon.icns", "iconbuilder/icon.iconset/*.png", "bcml/data/*.png", "bcml/data/*.ico"],
        "description": "Avoid committing binary files to the repository, with exceptions for necessary assets."
      }
    },
    "project_structure": {
      "required_directories": {
        "enabled": true,
        "directories": ["src", "bcml", "docs", "iconbuilder"],
        "description": "Maintain a consistent project structure with required directories."
      },
      "macos_app_bundle": {
        "enabled": true,
        "required_structure": [
          "Contents/Info.plist",
          "Contents/MacOS/BCMLLauncher",
          "Contents/PkgInfo", 
          "Contents/Resources/AppIcon.icns"
        ],
        "description": "macOS application bundle must follow standard structure with required files as documented in app-structure.md."
      },
      "bnp_structure": {
        "enabled": true,
        "wiiu_structure": [
          "content",
          "aoc (optional)",
          "patches (optional)",
          "options (optional)"
        ],
        "switch_structure": [
          "01007EF00011E000/romfs",
          "01007EF00011F001/romfs (optional)",
          "options (optional)"
        ],
        "description": "BNP mods must follow the specified folder structure for Wii U or Switch as documented in bnp.md."
      }
    },
    "source_control": {
      "original_bcml_files": {
        "enabled": true,
        "priority": "critical",
        "source_repo": "https://github.com/neebyA/BCML",
        "description": "Do not modify 'bcml' project files that originated from the original BCML repository. The integrity of the original BCML codebase must be maintained."
      }
    },
    "application_behavior": {
      "error_handling": {
        "enabled": true,
        "remerge_first": true,
        "description": "Always try using the Remerge button first when encountering problems with mods as specified in trouble.md."
      },
      "mod_installation": {
        "enabled": true,
        "validate_load_order": true,
        "description": "Ensure proper mod load order with higher priority mods placed at the top of the list as documented in mods.md."
      },
      "environment_variables": {
        "enabled": true,
        "required_vars": ["QTWEBENGINE_DISABLE_SANDBOX=1"],
        "description": "Set required environment variables for the macOS launcher as specified in app-structure.md."
      }
    },
    "licensing": {
      "bcml_license": {
        "enabled": true,
        "license_type": "GPL-3.0-or-later",
        "description": "The BCML software is licensed under the GNU General Public License, version 3 or later."
      },
      "launcher_license": {
        "enabled": true,
        "license_type": "MIT",
        "description": "The macOS Launcher is licensed under the MIT License."
      },
      "third_party": {
        "enabled": true,
        "components": [
          {"name": "7-Zip", "license": "LGPL", "credit_required": true},
          {"name": "pywebview", "license": "BSD-3-Clause", "credit_required": true}
        ],
        "description": "Third-party components must be properly credited with their respective licenses."
      }
    }
  },
  "overrides": {
    "assets/**": {
      "git.no_binary_files.enabled": false
    },
    "iconbuilder/**": {
      "git.no_binary_files.enabled": false
    },
    "bcml/**": {
      "python.code_style.enabled": false,
      "javascript.jsx_formatting.enabled": false,
      "code_modification.scope_restriction.enabled": true
    }
  },
  "build_attempts": [
    {
      "date": "2025-03-13",
      "attempt": "Bootstrap script",
      "result": "Failed",
      "issue": "Rust compilation error with 'const_slice_index' feature",
      "solution": "Installed pre-built wheel file instead"
    },
    {
      "date": "2025-03-13",
      "attempt": "py2app build",
      "result": "Failed",
      "issue": "Missing pyqtwebengine module",
      "solution": "Install pyqtwebengine explicitly"
    },
    {
      "date": "2025-03-13",
      "attempt": "BCML-macOS-Launcher build script",
      "result": "Success",
      "issue": null,
      "solution": "Used the dedicated macOS launcher build script instead of py2app directly"
    },
    {
      "date": "2025-03-13",
      "attempt": "Custom Python wrapper",
      "result": "Failed",
      "issue": "Import issues with bcml module and Rust extension",
      "solution": "Created improved wrapper with better module patching"
    },
    {
      "date": "2025-03-13",
      "attempt": "Dedicated test script",
      "result": "Success",
      "issue": null,
      "solution": "Created a standalone Python script that properly sets up the environment and launches BCML"
    },
    {
      "date": "2025-03-13",
      "attempt": "Integrated solution",
      "result": "In Progress",
      "issue": null,
      "solution": "Combined BCML-macOS-Launcher with py2app for a comprehensive solution. Created a central run_bcml.py script to handle Python environment setup and proper import paths. Updated app_launcher.py to handle both development and production modes. Uses direct module imports rather than relying on external scripts."
    },
    {
      "date": "2025-03-13",
      "attempt": "BCML-macOS-Launcher with embedded Python launcher",
      "result": "Success",
      "issue": "Using BCML-macOS-Launcher build with custom run_bcml.py script to handle Python environment",
      "solution": "Built the app using the BCML-macOS-Launcher build script, then added our custom Python run_bcml.py script to the Resources directory. Fixed config.json formatting issues."
    }
  ]
}
